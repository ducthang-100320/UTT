
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<!-- Styles -->
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/4/core.js"></script>
<script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
<script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>

<!-- Chart code -->
<script>
    am4core.ready(function () {

        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end

        // Create chart instance
        var chart = am4core.create("chartdiv", am4charts.PieChart);

        // Add data
        $.ajax({
            url: '@Url.Action("GetChart3","Home")',
            type: "GET",
            processData: false,
            contentType: false,
            contentType: "application/json",
            dataType: "json",
            success: function (result) {
                chart.data = result.data;
            },
            error: function (er) {
                alert("error: " + er.message);
            }


        });
        //chart.data = [{
        //    "country": "Lithuania",
        //    "litres": 501.9
        //}, {
        //    "country": "Czechia",
        //    "litres": 301.9
        //}, {
        //    "country": "Ireland",
        //    "litres": 201.1
        //}, {
        //    "country": "Germany",
        //    "litres": 165.8
        //}, {
        //    "country": "Australia",
        //    "litres": 139.9
        //}, {
        //    "country": "Austria",
        //    "litres": 128.3
        //}, {
        //    "country": "UK",
        //    "litres": 99
        //}
        //];

        // Add and configure Series
        var pieSeries = chart.series.push(new am4charts.PieSeries());
        pieSeries.dataFields.value = "values";
        pieSeries.dataFields.category = "names";
        pieSeries.slices.template.stroke = am4core.color("#fff");
        pieSeries.slices.template.strokeOpacity = 1;

        // This creates initial animation
        pieSeries.hiddenState.properties.opacity = 1;
        pieSeries.hiddenState.properties.endAngle = -90;
        pieSeries.hiddenState.properties.startAngle = -90;

        chart.hiddenState.properties.radius = am4core.percent(0);


    }); // end am4core.ready()
</script>
<style>
    #chartdiv2 {
        width: 100%;
        height: 500px;
    }
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/4/core.js"></script>
<script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
<script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>

<!-- Chart code -->
<script>
    am4core.ready(function () {

        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end

        var chart = am4core.create("chartdiv2", am4charts.XYChart);
        chart.hiddenState.properties.opacity = 0; // this creates initial fade-in

        $.ajax({
            url: '@Url.Action("GetChart3","Home")',
            type: "GET",
            processData: false,
            contentType: false,
            contentType: "application/json",
            dataType: "json",
            success: function (result) {
                chart.data = result.data;
            },
            error: function (er) {
                alert("error: " + er.message);
            }


        });


        var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
        categoryAxis.renderer.grid.template.location = 0;
        categoryAxis.dataFields.category = "names";
        categoryAxis.renderer.minGridDistance = 40;
        categoryAxis.fontSize = 11;

        var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
        valueAxis.min = 0;
        valueAxis.max = 10;
        valueAxis.strictMinMax = true;
        valueAxis.renderer.minGridDistance = 30;
        // axis break
        var axisBreak = valueAxis.axisBreaks.create();
        axisBreak.startValue = 2100;
        axisBreak.endValue = 22900;
        //axisBreak.breakSize = 0.005;

        // fixed axis break
        var d = (axisBreak.endValue - axisBreak.sta1rtValue) / (valueAxis.max - valueAxis.min);
        axisBreak.breakSize = 0.05 * (1 - d) / d; // 0.05 means that the break will take 5% of the total value axis height

        // make break expand on hover
        var hoverState = axisBreak.states.create("hover");
        //hoverState.properties.breakSize = 1;
        hoverState.properties.opacity = 0.1;
        hoverState.transitionDuration = 1500;

        axisBreak.defaultState.transitionDuration = 1000;


        var series = chart.series.push(new am4charts.ColumnSeries());
        series.dataFields.categoryX = "names";
        series.dataFields.valueY = "values";
        series.columns.template.tooltipText = "{valueY.value}";
        series.columns.template.tooltipY = 0;
        series.columns.template.strokeOpacity = 0;

        // as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set
        series.columns.template.adapter.add("fill", function (fill, target) {
            return chart.colors.getIndex(target.dataItem.index);
        });

    }); // end am4core.ready()
</script>

<!-- HTML -->
@*<div id="chartdiv"></div>*@

<!-- HTML -->
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="row">
                <div class="col-lg-8">
                    <div id="chartdiv"></div>
                </div>
                <div class="col-lg-4">
                    <div id="chartdiv2"></div>
                </div>
            </div>
        </div>
    </div>

</div>

